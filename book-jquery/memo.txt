# jsの基本はhtmlとcssを操作

DOM
Document Object Model

jqueryはjavascriptの弱点を克服するライブラリー

jqueryには7つの特徴がある
1.セレクタ
htmlの要素を取得する機能
2.トラバース
すでに取得した要素に対して相対的な位置で要素を取得する
3.イベント
ある要素に対してイベントが発生した時にその処理を定義するための機能
4.マニュピレーション
htmlに新たな要素を追加したりcssプロパティを追加したりする機能
5.アニメーション
状態変化を滑らかに見せたりする機能
6.Ajax
サーバーからのデータを取得して、表示させるhtmlを操作するための機能
7.プラグインを作成する機能など...

イベントハンドラとは？
なんらかの物事が発生した
イベントとはなんらかの物事が発生したこと
なんらかの物事が白瀬下タイミングで何かをしたい場合その処理内容を記述する必要がある
それがイベントハンドラ
つまりイベントハンドラとは、イベントが発生した時に実行する処理内容

$(function(){
  $('p').on('click（こっちはイベント）',（ここの部分がイベントハンドラ）);
});

セミコロンは命令の終了を意味する

イベントのまとめ

jqueryで記述するスクリプトは多くの場合、まず$()で要素を取得してからイベントハンドラを設定します。
イベントの設定にはonを使用します。
また、jQueryでは、.でつないで、複数のメソッドを実行できる
これが、メソッドチェーン
複数イベントに対してイベントを設定する時、onを繋げて記述するのが、典型的なメソッドチェーン。
よく使われる

!!onで繋いで、メソッドチェーン!!

jqueryにはトランバースって機能がある
トランバース = 行ったり来たり
DOMツリーの階層が構造を文字通り、行ったり来たりして要素を取得する
利点
処理速度が若干早い
柔軟に要素を取得できる


find('セレクタ')
トランバースは相対的な階層関係を指定して要素を取得するメソッド
その中でも代表
子要素でマッチするものはすべて取得する
.closest
メソッドに一番近い要素を取得する
### 処理の流れ
1.tdがクリックされる
2.イベントハンドラが呼ばれる
3.イベントハンドラの中でクリックされたtdの上のtableを探しそこに含まれるすべてのtdの色を消す
4.そのあとでクリックされた背景だけに色をつける

tdがクリックされてイベントハンドラの実行が始まると、まず、$thisを定義して、そこに$thisつまり、
クリックされた<td>を保存（代入）します。

parent()
親要素を取得する

filter('セレクター')
すでに取得要素のうち()ないのセレクタにマッチするものを選別する

ラジオボタンはチェックボックスと同じようには動作しない
id属性は同じ同一グループ内で1つしか選択できない
一つクリックすると他のものは解除される
ところが、changeイベントはクリックなどの操作によって明示的に状態を変化させたラジオボタンにしか発生しない
選択解除に明確な変化はない
そこで、最初に色を戻す手続きをとる

siblingsは兄弟要素
つまり、同階層にある要素をすべて取得する
ただし、起点となった自分は含まない

トラバースのまとめ
トラバースは、$('セレクタ')で取得した要素を起点に相対的な位置関係で別の要素を取得する機能
要素取得が柔軟に行える
例えば、「チェックをつけたチェックボックスの親要素<label>」を取得するにはセレクタよりもトラバースを使ったほうが効果的
また、複雑なセレクタを駆使して、$()で要素を取得するよりも処理速度が早い

jqueryのトレーニングその6

マニュピレーション
それまでのhtmlやcssの要素をjqueryで追加削除すること
いままではcssだったけれども、他も試してみようっていうのが今回

data-（属性）の値を取得する場合
.data('属性名')

data-（属性）の値を変更する場合
.data('属性名',値)

data属性は要素になんらかの値を保持しておくために開発者が自由に作ることができる属性
jqueryだと.data()メソッドで値を取得・変更することができる

スクリプト変数とdata-*属性の違い
関数の中で定義している関数をローカル関数という
ローカル関数は処理が終わると消えてしまう
しかし、data-*属性は消えない
そのままを維持する

jqeuryの場合は
var 変数名 = $('<tag>生成したい要素</tag>');
丸ごとクオートで囲ってあげればOK

.after
要素を追加する

slideToggle()
トグルと違うのはデフォルトでアニメーションであること
toggle・slideToggleで簡単にアニメーションができる

レスポンシブなナビゲーション
IE8はメディアQueryに対応していない

メディアクエリ
@mediaではじまる部分メディアクエリと呼ばれる。
条件が揃った時だけ有効にできるcss
andで繋げて複数指定ができる
ピクセル数で指定もできる

$(window).on('resize',function{
  //ここに処理を書く
});

.css('プロパティ名',値);
値の変更
.css('プロパティ名');
値の取得

コンテンツを切り替えるタブ

3つ並んだタブをクリックするとそのすぐ下のボックスが切り替わる

siblingsは兄弟要素

event.preventDefault()
on()で発生したイベントハンドラには、Eventオブジェクトというパラメータが渡される
Eventオブジェクトには、preventDefaultというメソッドが含まれていて、これを実行するとイベント発生時にデフォルト動作を抑制できる

次にデリゲートを使用する

on('イベント','セレクタ',イベントハンドラ)
onの2番目のパラメータにセレクタを入れると、イベントのデリゲートができる
デリゲートとは、譲渡の意味。
親から子供に遺産を譲渡するようにイベントが発生した要素そのものではなく親に設定しておく機能のこと
メリットは2つ。
省略化ができる
メモリ量を減らせる、だってイベントハンドラは1つずつメモリーを消費する

表示するコンテンツを切り替える

コンテンツを切り替える処理
data-tabidを代入する

.children('セレクタ')
子要素を取得する
()の中にはセレクタを埋めることができる
取得できるのは直接の子要素。
孫要素は見つけられない

.each(関数)
取得している要素全てに、記述した関数を一度だけ実行する


最初にサムネイルの動作を実装する

end()
jqueryを一つ前のチェーンに戻す

.attr('属性'),.attr('属性','値')
attr()はタグの属性を取得もしくは変更するメソッド

画像のプリロード
src属性にプリロードしたい画像のパスが指定されたimgを生成する
画像のダウンロードが始まり、ブラウザにキャッシュされるようになる
生成したimgをhtmlのドキュメントに挿入するなどの操作は必要無い

すべての<li>に対して1度だけ処理をする

aタグじゃなくてもクリックイベントが設定できる

.hasClass('クラス名')
クラスがついているかどうかを評価します。returnはtrueもしくはfalse

.next('セレクタ')
対象要素と同階層にある次の要素を所得する
次の要素がそのセレクタにマッチする時だけ所得できるようになる

.show(速度)、hide(速度)

==trueは省略可能

step2
ボタン以外をクリックした時にもメニューを閉じる

.offイベントを追加

.event.stopPropagation()
jsの仕組みの1つ。
ある要素をクリックしたならば、その要素のクリックイベント。
その親要素のクリックイベントとイベントが次々発生する。
このサンプルの場合は、aイベントから発生して、htmlまで戻ってしまう。
だから開閉しなかった
遡る仕組みをパブリングという。
パブリングを停止して親要素でイベント発生しないようにするためには、event.stopProgation()を使用する
.off('イベント','セレクタ',解除するハンドラ)
onで設定したイベントハンドラを解除する場合は、offを使用する
イベントハンドラを設定したり、解除する必要がある場合、名前つき関数を定義する必要がある

イベントプロパケーションについて
jsでイベントが伝わる仕組み
イベントフェーズ
ある要素がクリックされた時clickイベントは遡っていく
上がっていくことをパブリング段階という
マウスイベント、タッチイベント、キーボード操作などの多くにイベントが発生する

複数のドロップダウンメニューに対応する
サンプルではドロップダウンメニューは一つだけだったが、複数組み込む場合は注意すべき点がある。
それはドロップダウンメニューをクリックしたら、他のドロップダウンメニューをたたまなければならないこと

gitとgithubの違い
ツールとプラットフォームの差

オブジェクトとは、
「複数の変数をひとまとめにした変数」
変数の場合、１つの変数には一つの値しか投入できない
オブジェクトの場合はいくつも。
オブジェクトの中身の変数をプロパティと呼ぶ
また、オブジェクトの中の関数はメソッド

border-radius:50%で画像を円形に切り抜く

onイベントを使う時は、ちゃんとクラス指定ができているか注意
65

.animate({cssプロパティオブジェクト},{オプションオブジェクト})
animate()の2番目のパラメータは速度の代わりにオブジェクトも設定できる
オプションオブジェクトにはいくつかプロパティがあるが今回使用したのは、durationとstepプロパティ
duration:速度
アニメーションの速度を決めるプロパティ
step:function(now,tween)
.stepプロパティにはcssの値が変化するたびに呼び出される関数を指定
透明度が変化するたびに呼び出される

transformプロパティ
要素を変形させるプロパティ
テキストや画像を変形することができる
transformのプロパティ値にはプロパティ関数と呼ばれる特殊な値を使用する
プロパティ関数とはurl()のようなかっこがついた値のことを言う

## consoleについて
consoleはブラウザのコンソールに情報を出力するオブジェクト
webサイトの開発時に関数や変数の状態を調べるときに使用する
IE8以下はconsoleに対応していない
consoleがあるとエラーになってしまう

%s(文字列置換)
%sや%oで2番目のパラメーターに置換冴える
例
var a = 'こんにちは';
console.log('変数a = %s', a);

### console.dir(オブジェクト)
パラメータのオブジェクトに含まれるプロパティをリスト構造にして出力する

循環するときのfindSlectorの使い方には注意
prevの使い方
crrentクラスのcssが重要
透過で動くスライドショーならば、
ulにrelativeを指定
liには、absolute
しかし、それだと、li用の幅が取れない。
だが、height、weightは指定できない。
そのため、currentのみをrelativeにすることで問題を回避できる
レスポンシブなデザインでスライドショーを作るなら重要なテクニック

setInterval(関数,ms);
第一引数は関数、第二引数はms
なお、呼び出す関数には()をつけない
setIntervalを実行すると、タイマー設定と同時にインターバルIDと呼ばれる整数値が帰ってくる
このインターバルIDはタイマーを描く女するときに必要

clearInterval(インターバルID)
動作中のタイマーを削除するjsの関数
引数には削除したいタイマーのインターバルIDを指定する
.clickで何も押さなくてもclickイベントを発生させることができる

なんで不具合が起きていたのか？
イベントパブリングによって、DOMを登っていく
そうすると、htmlタグもクリックした状態になってしまい、タグが閉じてしまった
従って、event.stopProgation()を追加することでclickイベントの伝播を停止する

ajax使いたいなら、ローカルサーバーを立てる必要があるもっとも簡単なたてかたは以下の通り、
ターミナルでcd PracticeField/まで移動
python -m SimpleHTTPServer 8888を打ち込む
http://localhost:8888/javascript/jquery/book-jquery/after/c03-07-c/index.html
でみることができる

詳しくはこちらを参照
http://qiita.com/0084ken/items/27ffb19fcc4d81d6bbbb

ajaxとは？
サーバーからデータを取得する場合、
htmlのフォームを使って送信ボタンがクリックされるタイミングでリクエストが送信されるのが通常の方法
jsには、XMLHTTPRequestオブジェクトがあって、これを使うとフォームを使わないで受信できるようになる

ajaxで注意したいのは取得データは同一のオリジンからしかできないこと
・サブドメインも含め、ドメインが完全に同じである
・プロトコルが同じである
・ポート番号が同じである

$.get('URL',データ,function(data){})
$.get()はajaxでデータを送信するメソッドの1つ。
1番目のパラメータはリクエスト先のURL
2番目はサーバーに送信するデータを指定
3番目は実行する関数
$.get()は、受信したデータがJSONだった場合は自動的にパース（解析）して、javascriptに変換する
console.dir(オブジェクト)
オブジェクトの内容をリストにしてコンソールに出力する

データ取得後の処理について記述する
aticle1.jsonの受信が完了すると、$get()に指定した関数が実行される
関数はまず、imgタグを作り、その中のsrc属性に含まれたデータを入れる
そのデータを変数に代入
.prepend(コンテンツ)
対象になるコンテンツを購入する
コンテンツは子要素の先頭に挿入される

.append(コンテンツ)
コンテンツを挿入する、コンテンツは最後の要素として挿入される

次に毎回違うデータを読み込む

データファイルの読み込み
データファイルの内容には、img、article、nextプロパティがある
最初の読み込まれるファイルには、次のjsonが指定されている
